type User {
  id: UUID! @unique
  firstName: String!
  lastName: String!
  email: String! @unique
  passwordDigest: String!
}

type Bases {
  id: UUID! @unique
  name: String!
  tables: [Tables!]!
}

type Tables @indexes(value: [{name: "Tables_baseId_name_uk", fields: ["name", "baseId"]}]) {
  id: UUID! @unique
  name: String!
  baseId: Bases!
  records: [Records!]!
  fields: [Fields!]!
}

type Fields {
  id: UUID! @unique
  name: String!
  fieldTypeId: FieldTypes!
  fieldValues: [FieldValues!]!
  tableId: Tables!
  width: Int
  typeOptions: Json
}

type FieldTypes {
  id: ID! @unique
  name: String! @unique
  isArray: Boolean
  isPrimitive: Boolean
}

type Records {
  id: UUID! @unique
  tableId: Tables!
  fieldValues: [FieldValues!]!
}

type FieldValues @indexes(value: [{name: "FieldValues_recordId_fieldId_uk", fields: ["recordId", "fieldId"]}]) {
  id: ID! @unique
  fieldId: Fields!
  recordId: Records!
  value: Json
}